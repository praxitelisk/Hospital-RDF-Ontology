<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg height="521.0150" name="snapshot" onload="LoadHandler(evt)" onzoom="zoomHandler(evt)" width="1000.0" xmlns="http://www.w3.org/2000/svg"><AttributeMap name="Node Type" value="node color"/><defs/><g id="displayBean" transform="matrix(1.0553003297813528,0.0,0.0,1.0553003297813528,-27.650164890676365,23.109428315446365)"><image visibility="hidden"><![CDATA[ffd8ffe000104a46494600010200000100010000ffdb004300080606070605080707070909080a0c140d0c0b0b0c1912130f141d1a1f1e1d1a1c1c20242e2720222c231c1c2837292c30313434341f27393d38323c2e333432ffdb0043010909090c0b0c180d0d1832211c213232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232ffc00011080034006403012200021101031101ffc4001f0000010501010101010100000000000000000102030405060708090a0bffc400b5100002010303020403050504040000017d01020300041105122131410613516107227114328191a1082342b1c11552d1f02433627282090a161718191a25262728292a3435363738393a434445464748494a535455565758595a636465666768696a737475767778797a838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae1e2e3e4e5e6e7e8e9eaf1f2f3f4f5f6f7f8f9faffc4001f0100030101010101010101010000000000000102030405060708090a0bffc400b51100020102040403040705040400010277000102031104052131061241510761711322328108144291a1b1c109233352f0156272d10a162434e125f11718191a262728292a35363738393a434445464748494a535455565758595a636465666768696a737475767778797a82838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae2e3e4e5e6e7e8e9eaf2f3f4f5f6f7f8f9faffda000c03010002110311003f00f7b9e5f22169319c76aa9fda127fcfb1ff00be8ff8558bcff8f66faaff003159fadddcf6c6158642ab22b86181edfe359cefba762e2afa163fb424ff009f63ff007d1ff0a3fb424ff9f63ff7d1ff000ae745e5c8c62e26e063fd6b7f8d5ab0d42e85d451199991dc021c96efea6a1397f37e05b85ba1b1fda127fcfb1ffbe8ff008521d425c1c5b107b649ff000ad0ae52e352bb7631b4ed856e0afca7f318a72525f6898a52d91af1dfdd863e6c28cb8e02ab29cfeb52ff006849ff003ec7fefa3fe15cf2df5d23061712e41cf3231fd09aded1eee6bb8a5333062ac0038c50b99fdafc06e3657687ff006849ff003ec7fefa3fe147f6849ff3ec7fefa3fe146af732dada2490bed6de01e01c8c1f5ae705ddc01817137fdfd6ff001a1f3276e608c7995d23a3fed093fe7d8ffdf47fc29f0deb4b32c6d094dd9c1cff00f5ab9c4d4aee1cbacee481fc6c587eb5d44dff001f36ff0056fe469c799f514a36e84f451456a664179ff1ecdf55fe62b375c485dedc4b71e4901b1fbb2d9e9e95a579ff001ecdf55fe62b27c440efb5e3b3ff00ecb532d9970dd18bf2671e69faf966aee9f1db9ba818dde1f78c2185b9e7d7a551c1f4ab1620fdbedf8ff968bfceb246d25a6e7615c75d2c0b2929705f24923ca60457635c5cc089e4e0fde3fceaea6c674b719fbbff009ea7fefd9ae8f444892197ca9fcdcb0c9d8571f9d73783e95bfe1f07c89b8fe21fca94372aa2f7772f6a3666fadc441c210c1b2467fcf5acbff84764ff009f95ff00be3ffaf5bf4568e29ee64a6d6c601f0ec8411f6a5e7fd8ff00ebd6c4dff1f36ff56fe46a7a826ff8f9b7fab7f234ac96c0e4dee4f451455124179ff1ecdf55fe62a7a82f3fe3d9beabfcc54f4ba80514514c028a28a0028a28a0028a28a002a09bfe3e6dfeadfc8d4f504dff001f36ff0056fe4693027a28a2980d745910a38ca9ea2a1fb0db7fcf3ffc78d14526930b87d86dbfe79ffe3c68fb0db7fcf3ff00c78d1451cabb0eec3ec36dff003cff00f1e347d86dbfe79ffe3c68a28e55d82ec3ec36dff3cfff001e347d86dbfe79ff00e3c68a28e55d82ec3ec36dff003cff00f1e347d86dbfe79ffe3c68a28e55d82ec3ec36dff3cfff001e34e8ed6089c3a47861d0e49a28a39505d93514514c47ffd9]]></image><g id="nodes_and_labels"><rect fill="rgb(245,224,171)" height="500.0" id="http://www.w3.org/2002/07/owl#Thing" onmousemove="mousemoveHandler(evt)" panelMode="Children" rx="25.0" ry="25.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.8560000000000001,0.0,0.0,0.8560000000000001,87.5,19.55000000000001)" visibility="visible" width="963.0"><transform height="0.8560000000000001" scaleX="87.5" scaleY="19.55000000000001" width="0.0" x="0.8560000000000001" y="0.0"/><focus>false</focus><title>owl:Thing (Primitive Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.8560000000000001,0.0,0.0,0.8560000000000001,87.5,19.55000000000001)" x="34.0" y="28.064453125">owl:Thing<title>owl:Thing (Primitive Class)</title></text><rect fill="rgb(219,193,181)" height="500.0" id="http://www.owl-ontologies.com/Hospital.rdf#Reception" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="25.0" ry="25.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.18147200000000002,0.0,0.0,0.18147200000000002,412.26,187.62774000000002)" visibility="visible" width="966.0"><transform height="0.212" scaleX="379.39252336448595" scaleY="196.3525" width="0.0" x="0.212" y="0.0"/><parentId>179</parentId><focus>false</focus><title>Hospital:Reception (RDFS Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.18147200000000002,0.0,0.0,0.18147200000000002,412.26,187.62774000000002)" x="60.0" y="28.064453125">Hospital:Reception<title>Hospital:Reception (RDFS Class)</title></text><rect fill="rgb(219,193,181)" height="500.0" id="http://www.owl-ontologies.com/Hospital.rdf#Person" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="25.0" ry="25.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.18147200000000002,0.0,0.0,0.18147200000000002,140.684,187.62774000000002)" visibility="visible" width="966.0"><transform height="0.212" scaleX="62.13084112149531" scaleY="196.3525" width="0.0" x="0.212" y="0.0"/><parentId>179</parentId><focus>false</focus><title>Hospital:Person (RDFS Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.18147200000000002,0.0,0.0,0.18147200000000002,140.684,187.62774000000002)" x="52.0" y="28.064453125">Hospital:Person<title>Hospital:Person (RDFS Class)</title></text><rect fill="rgb(219,193,181)" height="500.0" id="http://www.owl-ontologies.com/Hospital.rdf#Infrastructure" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="25.0" ry="25.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.18147200000000002,0.0,0.0,0.18147200000000002,683.836,77.60178000000002)" visibility="visible" width="966.0"><transform height="0.212" scaleX="696.6542056074766" scaleY="67.8175" width="0.0" x="0.212" y="0.0"/><parentId>179</parentId><focus>false</focus><title>Hospital:Infrastructure (RDFS Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.18147200000000002,0.0,0.0,0.18147200000000002,683.836,77.60178000000002)" x="68.0" y="28.064453125">Hospital:Infrastructure<title>Hospital:Infrastructure (RDFS Class)</title></text><rect fill="rgb(219,193,181)" height="500.0" id="http://www.owl-ontologies.com/Hospital.rdf#History" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="25.0" ry="25.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.18147200000000002,0.0,0.0,0.18147200000000002,412.26,77.60178000000002)" visibility="visible" width="966.0"><transform height="0.212" scaleX="379.39252336448595" scaleY="67.8175" width="0.0" x="0.212" y="0.0"/><parentId>179</parentId><focus>false</focus><title>Hospital:History (RDFS Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.18147200000000002,0.0,0.0,0.18147200000000002,412.26,77.60178000000002)" x="51.0" y="28.064453125">Hospital:History<title>Hospital:History (RDFS Class)</title></text><rect fill="rgb(219,193,181)" height="500.0" id="http://www.owl-ontologies.com/Hospital.rdf#Accounting" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="25.0" ry="25.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.18147200000000002,0.0,0.0,0.18147200000000002,140.684,77.60178000000002)" visibility="visible" width="966.0"><transform height="0.212" scaleX="62.13084112149531" scaleY="67.8175" width="0.0" x="0.212" y="0.0"/><parentId>179</parentId><focus>false</focus><title>Hospital:Accounting (RDFS Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.18147200000000002,0.0,0.0,0.18147200000000002,140.684,77.60178000000002)" x="62.0" y="28.064453125">Hospital:Accounting<title>Hospital:Accounting (RDFS Class)</title></text></g><g id="arcs"/></g><g name="non_display" visibility="hidden" xmlns=""><g name="info" visibility="hidden"><text name="userName">praxitelis</text><text name="prjName">Hospital3</text><text name="timeStamp">Κυρ, 26 Μαρ 2017 13:21:50 +0300</text><text name="userComment">[no comment entered]</text><text id="currentScale">1.0553003297813532</text></g><text name="cprels">has subclass|has instance</text><text name="focusedNodeID">-1</text><text height="493.69832008670534" name="screenCoord" width="947.5975433526014" x="26.201228323699272" y="-21.89843750000002"/><g id="displayFilters" name="displayFilters"><text id="filter_0" name="filter_0">nominal attribute|artifact filter|Node Type|java.lang.String</text><text id="filter_1" name="filter_1">nominal attribute|relationship filter|Arc Type|java.lang.String</text></g><g id="dataFilters" name="dataFilters"><text id="filter_0" name="filter_0">nominal attribute|artifact type string filter|Node Type|java.lang.String</text><text id="filter_1" name="filter_1">nominal attribute|relationship type string filter|Arc Type|java.lang.String</text></g></g><script><![CDATA[var svgSVGElement;var ZOOM_FACTOR_IN = 1.10;var ZOOM_FACTOR_OUT = 1.0/ZOOM_FACTOR_IN;var ZOOM_DIRECTION_IN = "in"var ZOOM_DIRECTION_OUT = "out"var ZOOM_KEY_IN = "Z"var ZOOM_KEY_OUT = "X"var ZOOM_TIMEOUT = 50; // millisecondsvar zoomFactor;var zoomDirection;var zooming = false;var mouseLocX = 0.0;var mouseLocY = 0.0;var ABSOLUTE_ARC_WIDTH = 2.0;var newScale = 1.0;var newTransX = 0.0;var newTransY = 0.0;function dumpProps(obj, parent) {   for (var i in obj) {      if (parent) { msg = parent + "." + i + "\n" + obj[i]; } else { var msg = i + "\n" + obj[i]; }      if (!confirm(msg)) { return; }      if (typeof obj[i] == "object") {          if (parent) { dumpProps(obj[i], parent + "." + i); } else { dumpProps(obj[i], i); }      }   }}function LoadHandler (evt) { 	if ( window.svgDocument == null ) {		svgDocument = evt.target.ownerDocument;	}	svgSVGElement = svgDocument.getDocumentElement();	new Title (svgDocument, 12); 	var currentScale = svgDocument.getElementById("currentScale");	var cscale = currentScale.getFirstChild().getNodeValue();	//alert("displaybean scale "+cscale);	var svgscale = svgSVGElement.getCurrentScale();	//alert("svg startup scale "+svgscale);	adjustArcWidths(cscale);// 	setTimeout('adjustArcWidths(cscale)', 10);	 }  function zoomHandler(evt) { 	Title_Zoom(evt);		var cscale = svgSVGElement.getCurrentScale();	//alert("zooming...true svg scale: "+ cscale);	adjustArcWidths(cscale);// 	setTimeout("adjustArcWidths(csale)", 100);	//setTimeout('adjustCommentBox()', 100); }  // update the thickness of the arcs so that they always appear the  // same thickness no matter what the current scale is  function adjustArcWidths (cs) {	//alert("pass in scale " + cs); 	// look for line elements	var lineElements = svgDocument.getElementsByTagName ("line");//	var cs = svgSVGElement.getCurrentScale();	if((cs<=1)){	   return;	}	if(cs>=2){	   cs = cs*2;		}	var newStrokeWidth = ABSOLUTE_ARC_WIDTH/cs;	for (var i = 0; i<lineElements.getLength(); i++) {		var lineElement = lineElements.item(i);		var strokeWidth = lineElement.getAttribute ("stroke-width");		// do not let stroke too thick 		if(newStrokeWidth>=0.4){		  newStrokeWidth = 0.1;		}		if(newStrokeWidth<=0.1){		  newStrokeWidth = 0.2;		}			   lineElement.setAttribute ("stroke-width", "" + newStrokeWidth);	}//   	alert("draw stroke width: " + newStrokeWidth); }   function adjustCommentBox () {	var commentTransElement = svgDocument.getElementById ("commentTranslate");	var commentScaleElement = svgDocument.getElementById ("commentScale");  	var currSVGScale = svgSVGElement.currentScale;	var newCommentScale = 1.0/currSVGScale;	var currSVGTransX = svgSVGElement.currentTranslate.x	var currSVGTransY = svgSVGElement.currentTranslate.y	var newCommentTransX =  - currSVGTransX;	var newCommentTransY =  - currSVGTransY;	commentScaleElement.setAttribute("transform", "scale(" + newCommentScale + ")");	commentTransElement.setAttribute("transform", "translate(" + newCommentTransX + "," + newCommentTransY + ")"); }  function keyupHandler (keyEvent) {	// Get the character-code of the key that was pressed.	var key = keyEvent.keyCode;	// Get string equivalent of input character-code.	var input_text = String.fromCharCode(key);	//window.status = input_text + "up";	if (zooming && zoomDirection == ZOOM_DIRECTION_IN && input_text == ZOOM_KEY_IN) {  		// zoom in  		zooming = false;	} else if (zooming && zoomDirection == ZOOM_DIRECTION_OUT && input_text == ZOOM_KEY_OUT) {		// zoom out  		zooming = false;	} else {		// do nothing	}}function keydownHandler (keyEvent) {	// Get the character-code of the key that was pressed.	var key = keyEvent.keyCode;	// Get string equivalent of input character-code.	var input_text = String.fromCharCode(key);	//window.status = input_text + "down";	if (input_text == ZOOM_KEY_IN) {  		// start zooming in  		zoomDirection = ZOOM_DIRECTION_IN;  		zoomFactor = ZOOM_FACTOR_IN;  		zooming = true;	} else if (input_text == ZOOM_KEY_OUT) {		// start zooming out		zoomDirection = ZOOM_DIRECTION_OUT  		zoomFactor = ZOOM_FACTOR_OUT;  		zooming = true;	} else {		zooming = false;	}	// keep zooming until a keyup event is thrown	//if (zooming) {		//setTimeout('zoomOneStep()', ZOOM_TIMEOUT);	//}	zoomOneStep();}function mousemoveHandler (evt) {		mouseLocX = evt.getClientX();	mouseLocY = evt.getClientY();	var currScale = svgSVGElement.currentScale;	var currTransX = svgSVGElement.currentTranslate.x;	var currTransY = svgSVGElement.currentTranslate.y;	var absoluteX = (mouseLocX - currTransX) / currScale;	var absoluteY = (mouseLocY - currTransY) / currScale;	var scaleAndTransform = "scale: " +  svgSVGElement.currentScale + "  translate: " + svgSVGElement.currentTranslate.x + "," + svgSVGElement.currentTranslate.y;	var mouseLocationTransformed = "mouseLocation (transformed): " + mouseLocX + "," + mouseLocY;	var mouseLocationAbsolute = "mouseLocation (absolute): " + absoluteX + "," + absoluteY;	//window.status = scaleAndTransform + "  -  " + mouseLocationTransformed + "  -  " + mouseLocationAbsolute;	Title.Activate(evt);}function zoomOneStep () {  	var oldScale = svgSVGElement.currentScale;  	var oldTransX = svgSVGElement.currentTranslate.x  	var oldTransY = svgSVGElement.currentTranslate.y  	newScale = oldScale; 	newTransX = oldTransX; 	newTransY = oldTransY; 	var oldAbsoluteX = (mouseLocX - oldTransX) / oldScale;	var oldAbsoluteY = (mouseLocY - oldTransY) / oldScale;  	newScale = oldScale * zoomFactor;	// we want the absolute point under the mouse to stay in the same place	//ie. the absolute position of the mouse should be the same when done	newTransX = mouseLocX - newScale * oldAbsoluteX;	newTransY = mouseLocY - newScale * oldAbsoluteY;		// set the new scale and translation  	svgSVGElement.currentScale = newScale;	svgSVGElement.currentTranslate.x = newTransX;  	svgSVGElement.currentTranslate.y = newTransY;}// == Title.js -- Copyright (C) Stefan Goessner ========================function Title(doc, sz) {   this.element = null;  // element to show title of ..   Title.size = sz;      // text size ..   Title.oldScale = document.getDocumentElement().getCurrentScale();     // scaling modified by zooming ..   this.Create(doc);   AddTitleEvents(doc.getDocumentElement());   window.svgTitle = this;}Title.prototype.Create = function(doc){   this.rec = doc.createElement("rect");   this.rec.setAttribute("y", -0.9*Title.size);   this.rec.setAttribute("x", -0.25*Title.size);   this.rec.setAttribute("width", "1");   this.rec.setAttribute("height", 1.25*Title.size);   this.rec.setAttribute("style", "stroke:black;fill:#edefc2;stroke-width:1");   this.str = doc.createTextNode("");   this.txt = doc.createElement("text")   this.txt.setAttribute("style", "font-family:Arial; font-size:" + Title.size + ";fill:black;");   this.txt.appendChild(this.str);   this.grp = doc.createElement("g"),   this.grp.setAttribute("transform", "translate(0,0)");   this.grp.setAttribute("visibility", "hidden");   this.grp.appendChild(this.rec);   this.grp.appendChild(this.txt);   doc.getDocumentElement().appendChild(this.grp);}Title.Activate = function Title_Activate(evt) {	mouseLocX = evt.getClientX();	mouseLocY = evt.getClientY();		var currScale = svgSVGElement.currentScale;	var currTransX = svgSVGElement.currentTranslate.x;	var currTransY = svgSVGElement.currentTranslate.y;	var absoluteX = (mouseLocX - currTransX) / currScale;	var absoluteY = (mouseLocY - currTransY) / currScale;		var scaleAndTransform = "scale: " +  svgSVGElement.currentScale + "  translate: " + svgSVGElement.currentTranslate.x + "," + svgSVGElement.currentTranslate.y;	var mouseLocationTransformed = "mouseLocation (transformed): " + mouseLocX + "," + mouseLocY;	var mouseLocationAbsolute = "mouseLocation (absolute): " + absoluteX + "," + absoluteY;	var x = (evt.getClientX() - document.getDocumentElement().getCurrentTranslate().getX())/document.getDocumentElement().getCurrentScale() +  0.25*Title.size;	    var y = (evt.getClientY() - document.getDocumentElement().getCurrentTranslate().getY())/document.getDocumentElement().getCurrentScale() - Title.size;	window.svgTitle.element = evt.getCurrentTarget();	window.svgTitle.str.setNodeValue(TextOf(TitleElementOf(window.svgTitle.element)));	window.svgTitle.rec.setAttribute("width", window.svgTitle.txt.getComputedTextLength() + 0.5*Title.size);	window.svgTitle.grp.setAttribute("transform", "translate(" + x + "," + y + ")");	window.svgTitle.grp.setAttribute("visibility", "visible");}Title.Zoom = function Title_Zoom(evt) {   var newscl = evt.getTarget().getOwnerDocument().getDocumentElement().getCurrentScale();   Title.size *= Title.oldScale/newscl;   //alert ("Title.size: " + Title.size);   Title.oldScale = newscl;   window.svgTitle.rec.setAttribute("y", -0.9*Title.size);   window.svgTitle.rec.setAttribute("x", -0.25*Title.size);   window.svgTitle.rec.setAttribute("height", 1.25*Title.size);   window.svgTitle.rec.setAttribute("style", "stroke:black;fill:#edefc2;stroke-width:" + 1/document.getDocumentElement().getCurrentScale());   window.svgTitle.txt.setAttribute("style", "font-family:Arial; font-size:" + Title.size + ";fill:black;");}Title.Register = function Title_Register(elem) {   if (TitleElementOf(elem) != null)      elem.addEventListener("mousemove", Title.Activate, false);}// --- local helper functions ------------------------function TitleElementOf(elem) {   var childs = elem.getChildNodes();   for (var i=0; i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 1 && childs.item(i).getNodeName() == "title") // title element ..         return childs.item(i);      return null;}function TextOf(elem) {   var childs = elem ? elem.getChildNodes() : null;   for (var i=0; childs && i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 3) // text node ..         return childs.item(i).getNodeValue();      return "";}function AddTitleEvents(elem) {   var childs = elem.getChildNodes();   for (var i=0; i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 1) // element node ..         AddTitleEvents(childs.item(i));   if (TitleElementOf(elem) != null)      elem.addEventListener("mousemove", Title.Activate, false);}// === end ======================================================]]></script></svg>